"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
"""
import streamlit as st
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))

from llm_runner.core.providers.comet import CometProvider


def main():
    st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    
    show_settings_interface()


def show_settings_interface():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    
    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
    tab1, tab2, tab3 = st.tabs(["üîë API –ö–ª—é—á–∏", "ü§ñ –ú–æ–¥–µ–ª–∏", "‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"])
    
    with tab1:
        show_api_settings()
    
    with tab2:
        show_model_settings()
    
    with tab3:
        show_about()


def show_api_settings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ API"""
    st.subheader("üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∏ API")
    
    st.markdown("### Comet API")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    current_key = os.getenv("COMET_API_KEY")
    current_url = os.getenv("COMET_BASE_URL", "https://api.cometapi.com")
    
    if current_key:
        st.success("‚úÖ COMET_API_KEY –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
        st.code(f"–ö–ª—é—á: {current_key[:8]}...{current_key[-4:]}")
    else:
        st.error("‚ùå COMET_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    st.info(f"üåê Base URL: {current_url}")
    
    # –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    st.markdown("### üìù –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ")
    
    st.markdown("""
    1. **–°–æ–∑–¥–∞–π—Ç–µ —Ñ–∞–π–ª `.env`** –≤ –∫–æ—Ä–Ω–µ –ø—Ä–æ–µ–∫—Ç–∞ (–µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç)
    2. **–î–æ–±–∞–≤—å—Ç–µ –≤–∞—à API –∫–ª—é—á Comet:**
       ```
       COMET_API_KEY=your_actual_api_key_here
       COMET_BASE_URL=https://api.cometapi.com
       ```
    3. **–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ**
    
    ‚ö†Ô∏è **–í–∞–∂–Ω–æ:** –ù–∏–∫–æ–≥–¥–∞ –Ω–µ –¥–æ–±–∞–≤–ª—è–π—Ç–µ API –∫–ª—é—á–∏ –≤ –∫–æ–¥ –∏–ª–∏ –≤ Git!
    """)
    
    # –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
    st.markdown("### üß™ –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è")
    
    if st.button("üîç –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Comet API"):
        if not current_key:
            st.error("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ COMET_API_KEY –≤ .env —Ñ–∞–π–ª–µ")
        else:
            try:
                provider = CometProvider()
                # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å –ø—Ä–æ—Å—Ç–æ–π –º–æ–¥–µ–ª—å—é
                test_result = provider.generate(
                    messages=[{"role": "user", "content": "Hi"}],
                    model="comet-7b",
                    max_tokens=5
                )
                
                if test_result.error:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {test_result.error}")
                else:
                    st.success("‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Comet API —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                    st.info(f"–¢–µ—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç: {test_result.text}")
                    
            except Exception as e:
                st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")


def show_model_settings():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π"""
    st.subheader("ü§ñ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –º–æ–¥–µ–ª–µ–π")
    
    st.markdown("### –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏")
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π
    models_info = {
        "gpt-3.5-turbo": {
            "name": "GPT-3.5 Turbo",
            "description": "–ë—ã—Å—Ç—Ä–∞—è –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–∞—è –º–æ–¥–µ–ª—å OpenAI",
            "max_tokens": 4000,
            "recommended_temp": 0.7
        },
        "gpt-4": {
            "name": "GPT-4", 
            "description": "–ú–æ—â–Ω–∞—è –º–æ–¥–µ–ª—å OpenAI —Å —É–ª—É—á—à–µ–Ω–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏",
            "max_tokens": 4000,
            "recommended_temp": 0.7
        },
        "gpt-4-turbo": {
            "name": "GPT-4 Turbo",
            "description": "–ë—ã—Å—Ç—Ä–∞—è –≤–µ—Ä—Å–∏—è GPT-4 —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º",
            "max_tokens": 4000,
            "recommended_temp": 0.7
        }
    }
    
    for model_id, info in models_info.items():
        with st.expander(f"ü§ñ {info['name']} ({model_id})"):
            st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {info['description']}")
            st.markdown(f"**–ú–∞–∫—Å–∏–º—É–º —Ç–æ–∫–µ–Ω–æ–≤:** {info['max_tokens']}")
            st.markdown(f"**–†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:** {info['recommended_temp']}")
            
            # –¢–µ—Å—Ç –º–æ–¥–µ–ª–∏
            if st.button(f"üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å {model_id}", key=f"test_{model_id}"):
                if not os.getenv("COMET_API_KEY"):
                    st.error("‚ùå –°–Ω–∞—á–∞–ª–∞ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ COMET_API_KEY")
                else:
                    try:
                        provider = CometProvider()
                        result = provider.generate(
                            messages=[{"role": "user", "content": "–ü—Ä–∏–≤–µ—Ç! –ö–∞–∫ –¥–µ–ª–∞?"}],
                            model=model_id,
                            max_tokens=50,
                            temperature=info['recommended_temp']
                        )
                        
                        if result.error:
                            st.error(f"‚ùå –ú–æ–¥–µ–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {result.error}")
                        else:
                            st.success("‚úÖ –ú–æ–¥–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç!")
                            st.info(f"–û—Ç–≤–µ—Ç: {result.text}")
                            st.metric("–í—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞", f"{result.latency_ms}ms")
                            
                    except Exception as e:
                        st.error(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º
    st.markdown("### üí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º")
    
    st.markdown("""
    **Temperature (0.0 - 2.0):**
    - `0.0-0.3`: –î–µ—Ç–µ—Ä–º–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ, —Ç–æ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    - `0.4-0.7`: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∫—Ä–µ–∞—Ç–∏–≤–Ω–æ—Å—Ç—å (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
    - `0.8-1.2`: –ö—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ, —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    - `1.3-2.0`: –û—á–µ–Ω—å –∫—Ä–µ–∞—Ç–∏–≤–Ω—ã–µ, –Ω–µ–ø—Ä–µ–¥—Å–∫–∞–∑—É–µ–º—ã–µ –æ—Ç–≤–µ—Ç—ã
    
    **Max Tokens:**
    - `100-500`: –ö–æ—Ä–æ—Ç–∫–∏–µ –æ—Ç–≤–µ—Ç—ã
    - `500-1500`: –°—Ä–µ–¥–Ω–∏–µ –æ—Ç–≤–µ—Ç—ã (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
    - `1500-4000`: –î–ª–∏–Ω–Ω—ã–µ, –ø–æ–¥—Ä–æ–±–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã
    
    **Top P (0.0 - 1.0):**
    - `0.1-0.3`: –§–æ–∫—É—Å –Ω–∞ –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö —Ç–æ–∫–µ–Ω–∞—Ö
    - `0.4-0.7`: –°–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–±–æ—Ä (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)
    - `0.8-1.0`: –®–∏—Ä–æ–∫–∏–π –≤—ã–±–æ—Ä —Ç–æ–∫–µ–Ω–æ–≤
    """)


def show_about():
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"""
    st.subheader("‚ÑπÔ∏è –û –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏")
    
    st.markdown("""
    ## ü§ñ LLM Runner MVP
    
    **–í–µ—Ä—Å–∏—è:** 0.1.0
    
    **–û–ø–∏—Å–∞–Ω–∏–µ:** MVP –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π —á–µ—Ä–µ–∑ Comet API.
    
    ### üöÄ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:
    - ‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏ (–ø—Ä–æ–º–ø—Ç–∞–º–∏)
    - ‚úÖ –ó–∞–ø—É—Å–∫ –∑–∞–¥–∞—á –Ω–∞ –º–æ–¥–µ–ª—è—Ö Comet
    - ‚úÖ –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –æ—Ç–≤–µ—Ç–æ–≤ (1-5)
    - ‚úÖ –ü—Ä–æ—Å–º–æ—Ç—Ä –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—É—Å–∫–æ–≤
    - ‚úÖ –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π
    
    ### üõ†Ô∏è –¢–µ—Ö–Ω–æ–ª–æ–≥–∏–∏:
    - **Frontend:** Streamlit
    - **Backend:** Python 3.11+
    - **–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:** SQLite + SQLAlchemy
    - **API:** Comet API (api.cometapi.com)
    - **HTTP –∫–ª–∏–µ–Ω—Ç:** httpx
    
    ### üìÅ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:
    ```
    llm_runner/
    ‚îú‚îÄ‚îÄ core/providers/     # –ü—Ä–æ–≤–∞–π–¥–µ—Ä—ã LLM
    ‚îú‚îÄ‚îÄ db/                 # –ú–æ–¥–µ–ª–∏ –∏ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ –ë–î
    ‚îú‚îÄ‚îÄ ui/pages/          # –°—Ç—Ä–∞–Ω–∏—Ü—ã Streamlit
    ‚îî‚îÄ‚îÄ app.py             # –ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    ```
    
    ### üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞:
    1. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏: `pip install -r requirements.txt`
    2. –°–æ–∑–¥–∞–π—Ç–µ `.env` —Ñ–∞–π–ª —Å –≤–∞—à–∏–º `COMET_API_KEY`
    3. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: `streamlit run app.py`
    
    ### üìû –ü–æ–¥–¥–µ—Ä–∂–∫–∞:
    - GitHub: [eugenekogan-spb/comet-api-test](https://github.com/eugenekogan-spb/comet-api-test)
    - Comet API: [api.cometapi.com](https://api.cometapi.com)
    """)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    st.markdown("### üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
    
    try:
        from llm_runner.db.models import init_database
        from llm_runner.db.repo import DatabaseManager
        
        init_database()
        db_manager = DatabaseManager()
        
        with db_manager.get_session() as session:
            task_repo = db_manager.get_task_repo(session)
            run_repo = db_manager.get_run_repo(session)
            eval_repo = db_manager.get_evaluation_repo(session)
            
            tasks_count = len(task_repo.get_all_tasks())
            runs_count = len(run_repo.get_all_runs())
            successful_runs = len([r for r in run_repo.get_all_runs() if not r.error])
            
            col1, col2, col3 = st.columns(3)
            with col1:
                st.metric("–ó–∞–¥–∞—á", tasks_count)
            with col2:
                st.metric("–ó–∞–ø—É—Å–∫–æ–≤", runs_count)
            with col3:
                st.metric("–£—Å–ø–µ—à–Ω—ã—Ö", successful_runs)
                
    except Exception as e:
        st.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É: {e}")