"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—É—Å–∫–æ–≤
"""
import streamlit as st
import sys
import os
import json

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))

from llm_runner.db.models import init_database
from llm_runner.db.repo import DatabaseManager


def main():
    st.header("üìã –ò—Å—Ç–æ—Ä–∏—è –∑–∞–ø—É—Å–∫–æ–≤")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_database()
    db_manager = DatabaseManager()
    
    show_history_interface(db_manager)


def show_history_interface(db_manager: DatabaseManager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∏—Å—Ç–æ—Ä–∏–∏ –∑–∞–ø—É—Å–∫–æ–≤"""
    
    with db_manager.get_session() as session:
        run_repo = db_manager.get_run_repo(session)
        eval_repo = db_manager.get_evaluation_repo(session)
        task_repo = db_manager.get_task_repo(session)
        
        runs = run_repo.get_all_runs()
    
    if not runs:
        st.info("üìä –ó–∞–ø—É—Å–∫–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    successful_runs = [r for r in runs if not r.error]
    failed_runs = [r for r in runs if r.error]
    evaluated_runs = 0
    
    for run in successful_runs:
        if eval_repo.get_evaluation_by_run_id(run.id):
            evaluated_runs += 1
    
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.metric("–í—Å–µ–≥–æ –∑–∞–ø—É—Å–∫–æ–≤", len(runs))
    with col2:
        st.metric("–£—Å–ø–µ—à–Ω—ã—Ö", len(successful_runs))
    with col3:
        st.metric("–° –æ—à–∏–±–∫–∞–º–∏", len(failed_runs))
    with col4:
        st.metric("–û—Ü–µ–Ω–µ–Ω–æ", evaluated_runs)
    
    # –§–∏–ª—å—Ç—Ä—ã
    st.markdown("### üîç –§–∏–ª—å—Ç—Ä—ã")
    
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        models = list(set(run.model for run in runs))
        selected_model = st.selectbox("–ú–æ–¥–µ–ª—å", ["–í—Å–µ"] + sorted(models))
    with col2:
        statuses = ["–í—Å–µ", "–£—Å–ø–µ—à–Ω–æ", "–° –æ—à–∏–±–∫–æ–π"]
        selected_status = st.selectbox("–°—Ç–∞—Ç—É—Å", statuses)
    with col3:
        eval_statuses = ["–í—Å–µ", "–û—Ü–µ–Ω–µ–Ω–æ", "–ù–µ –æ—Ü–µ–Ω–µ–Ω–æ"]
        selected_eval_status = st.selectbox("–û—Ü–µ–Ω–∫–∞", eval_statuses)
    with col4:
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å"):
            st.rerun()
    
    # –§–∏–ª—å—Ç—Ä—É–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    filtered_runs = runs
    if selected_model != "–í—Å–µ":
        filtered_runs = [r for r in filtered_runs if r.model == selected_model]
    if selected_status == "–£—Å–ø–µ—à–Ω–æ":
        filtered_runs = [r for r in filtered_runs if not r.error]
    elif selected_status == "–° –æ—à–∏–±–∫–æ–π":
        filtered_runs = [r for r in filtered_runs if r.error]
    if selected_eval_status == "–û—Ü–µ–Ω–µ–Ω–æ":
        filtered_runs = [r for r in filtered_runs if not r.error and eval_repo.get_evaluation_by_run_id(r.id)]
    elif selected_eval_status == "–ù–µ –æ—Ü–µ–Ω–µ–Ω–æ":
        filtered_runs = [r for r in filtered_runs if not r.error and not eval_repo.get_evaluation_by_run_id(r.id)]
    
    st.markdown(f"### üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã ({len(filtered_runs)} –∏–∑ {len(runs)})")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
    for run in filtered_runs:
        # –ü–æ–ª—É—á–∞–µ–º –∑–∞–¥–∞—á—É
        task = task_repo.get_task_by_id(run.task_id)
        task_name = task.name if task else "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∑–∞–¥–∞—á–∞"
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ü–µ–Ω–∫—É
        evaluation = eval_repo.get_evaluation_by_run_id(run.id) if not run.error else None
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–≤–µ—Ç –∏ –∏–∫–æ–Ω–∫—É
        if run.error:
            status_icon = "‚ùå"
            status_color = "red"
        elif evaluation:
            status_icon = f"‚≠ê{evaluation.rating}"
            status_color = "green"
        else:
            status_icon = "‚è≥"
            status_color = "orange"
        
        with st.expander(
            f"{status_icon} {task_name} - {run.model} - {run.started_at.strftime('%d.%m.%Y %H:%M')}",
            expanded=False
        ):
            # –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
            col1, col2 = st.columns([2, 1])
            
            with col1:
                st.markdown(f"**–ó–∞–¥–∞—á–∞:** {task_name}")
                st.markdown(f"**–ú–æ–¥–µ–ª—å:** {run.model}")
                st.markdown(f"**–í—Ä–µ–º—è:** {run.latency_ms}ms")
                st.markdown(f"**–¢–æ–∫–µ–Ω—ã:** {run.total_tokens or 0}")
                st.markdown(f"**–î–∞—Ç–∞:** {run.started_at.strftime('%d.%m.%Y %H:%M:%S')}")
                
                if run.error:
                    st.error(f"**–û—à–∏–±–∫–∞:** {run.error}")
                elif evaluation:
                    stars = "‚≠ê" * evaluation.rating + "‚òÜ" * (5 - evaluation.rating)
                    st.markdown(f"**–û—Ü–µ–Ω–∫–∞:** {stars} ({evaluation.rating}/5)")
                    if evaluation.comment:
                        st.markdown(f"**–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:** {evaluation.comment}")
                else:
                    st.info("‚è≥ –û–∂–∏–¥–∞–µ—Ç –æ—Ü–µ–Ω–∫–∏")
            
            with col2:
                # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
                if not run.error:
                    if not evaluation:
                        if st.button("‚≠ê –û—Ü–µ–Ω–∏—Ç—å", key=f"eval_{run.id}"):
                            st.session_state[f"evaluate_run_{run.id}"] = True
                    else:
                        if st.button("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{run.id}"):
                            st.session_state[f"edit_run_{run.id}"] = True
                
                if st.button("üëÅÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å –¥–µ—Ç–∞–ª–∏", key=f"details_{run.id}"):
                    st.session_state[f"show_details_{run.id}"] = True
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –¥–µ—Ç–∞–ª–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if st.session_state.get(f"show_details_{run.id}", False):
                st.markdown("---")
                st.markdown("### üîç –î–µ—Ç–∞–ª–∏ –∑–∞–ø—É—Å–∫–∞")
                
                # –ü–∞—Ä–∞–º–µ—Ç—Ä—ã
                if run.params_json:
                    st.markdown("**–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:**")
                    params = json.loads(run.params_json)
                    st.json(params)
                
                # –°–æ–æ–±—â–µ–Ω–∏—è
                if run.messages_json:
                    st.markdown("**–°–æ–æ–±—â–µ–Ω–∏—è:**")
                    messages = json.loads(run.messages_json)
                    for i, msg in enumerate(messages):
                        st.markdown(f"**{i+1}. {msg['role']}:**")
                        st.text(msg['content'])
                
                # –û—Ç–≤–µ—Ç
                if run.response_text:
                    st.markdown("**–û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏:**")
                    st.markdown(run.response_text)
                
                # –°—ã—Ä–æ–π JSON
                if run.response_json:
                    st.markdown("**–°—ã—Ä–æ–π JSON –æ—Ç–≤–µ—Ç:**")
                    st.json(json.loads(run.response_json))
            
            # –§–æ—Ä–º–∞ –æ—Ü–µ–Ω–∫–∏
            if st.session_state.get(f"evaluate_run_{run.id}", False):
                st.markdown("---")
                with st.form(f"evaluate_{run.id}"):
                    st.markdown("### ‚≠ê –û—Ü–µ–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
                    
                    rating = st.selectbox("–û—Ü–µ–Ω–∫–∞:", [1, 2, 3, 4, 5], key=f"rating_{run.id}")
                    comment = st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", key=f"comment_{run.id}")
                    
                    col1, col2 = st.columns(2)
                    with col1:
                        if st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"):
                            with db_manager.get_session() as session:
                                eval_repo = db_manager.get_evaluation_repo(session)
                                eval_repo.create_evaluation(run.id, rating, comment)
                                st.success("‚úÖ –û—Ü–µ–Ω–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
                                st.session_state[f"evaluate_run_{run.id}"] = False
                                st.rerun()
                    with col2:
                        if st.form_submit_button("‚ùå –û—Ç–º–µ–Ω–∞"):
                            st.session_state[f"evaluate_run_{run.id}"] = False
                            st.rerun()
            
            # –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ü–µ–Ω–∫–∏
            if st.session_state.get(f"edit_run_{run.id}", False):
                st.markdown("---")
                with st.form(f"edit_{run.id}"):
                    st.markdown("### ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ü–µ–Ω–∫—É")
                    
                    new_rating = st.selectbox("–û—Ü–µ–Ω–∫–∞:", [1, 2, 3, 4, 5], index=evaluation.rating-1, key=f"edit_rating_{run.id}")
                    new_comment = st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π:", value=evaluation.comment or "", key=f"edit_comment_{run.id}")
                    
                    col1, col2 = st.columns(2)
                    with col1:
                        if st.form_submit_button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å"):
                            with db_manager.get_session() as session:
                                eval_repo = db_manager.get_evaluation_repo(session)
                                eval_repo.update_evaluation(run.id, new_rating, new_comment)
                                st.success("‚úÖ –û—Ü–µ–Ω–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
                                st.session_state[f"edit_run_{run.id}"] = False
                                st.rerun()
                    with col2:
                        if st.form_submit_button("‚ùå –û—Ç–º–µ–Ω–∞"):
                            st.session_state[f"edit_run_{run.id}"] = False
                            st.rerun()