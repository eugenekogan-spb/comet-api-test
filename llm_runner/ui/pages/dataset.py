"""
–°—Ç—Ä–∞–Ω–∏—Ü–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–∞—Ç–∞—Å–µ—Ç–æ–º –∑–∞–¥–∞—á
"""
import streamlit as st
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞
sys.path.append(os.path.dirname(os.path.dirname(os.path.dirname(os.path.dirname(__file__)))))

from llm_runner.db.models import init_database
from llm_runner.db.repo import DatabaseManager


def main():
    st.header("üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∞—Ç–∞—Å–µ—Ç–æ–º")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ë–î
    init_database()
    db_manager = DatabaseManager()
    
    # –°–æ–∑–¥–∞–µ–º –≤–∫–ª–∞–¥–∫–∏
    tab1, tab2 = st.tabs(["üìã –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á", "‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É"])
    
    with tab1:
        show_tasks_list(db_manager)
    
    with tab2:
        show_add_task_form(db_manager)


def show_tasks_list(db_manager: DatabaseManager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á"""
    st.subheader("–°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
    
    with db_manager.get_session() as session:
        task_repo = db_manager.get_task_repo(session)
        tasks = task_repo.get_all_tasks()
    
    if not tasks:
        st.info("üìù –ó–∞–¥–∞—á –ø–æ–∫–∞ –Ω–µ—Ç. –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–≤—É—é –∑–∞–¥–∞—á—É –≤–æ –≤–∫–ª–∞–¥–∫–µ '–î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É'")
        return
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–¥–∞—á–∏ –≤ –≤–∏–¥–µ –∫–∞—Ä—Ç–æ—á–µ–∫
    for task in tasks:
        with st.expander(f"üìù {task.name}", expanded=False):
            col1, col2 = st.columns([3, 1])
            
            with col1:
                st.markdown(f"**ID:** `{task.id}`")
                st.markdown(f"**–°–æ–∑–¥–∞–Ω–æ:** {task.created_at.strftime('%d.%m.%Y %H:%M')}")
                
                if task.input_text:
                    st.markdown("**–í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç:**")
                    st.text(task.input_text)
                
                st.markdown("**–®–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞:**")
                st.code(task.prompt_template, language="text")
            
            with col2:
                # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è
                if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", key=f"delete_{task.id}", type="secondary"):
                    with db_manager.get_session() as session:
                        task_repo = db_manager.get_task_repo(session)
                        if task_repo.delete_task(task.id):
                            st.success("‚úÖ –ó–∞–¥–∞—á–∞ —É–¥–∞–ª–µ–Ω–∞")
                            st.rerun()
                        else:
                            st.error("‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏")


def show_add_task_form(db_manager: DatabaseManager):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ñ–æ—Ä–º—É –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∏"""
    st.subheader("–î–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É")
    
    with st.form("add_task_form"):
        name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –¢–µ—Å—Ç –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞")
        
        prompt_template = st.text_area(
            "–®–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞",
            placeholder="–í–≤–µ–¥–∏—Ç–µ —à–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞. –ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ —Ñ–∏–≥—É—Ä–Ω—ã—Ö —Å–∫–æ–±–∫–∞—Ö: {variable}",
            height=150
        )
        
        input_text = st.text_area(
            "–í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)",
            placeholder="–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ–¥—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤ –ø—Ä–æ–º–ø—Ç",
            height=100
        )
        
        submitted = st.form_submit_button("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É", type="primary")
        
        if submitted:
            if not name or not prompt_template:
                st.error("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —à–∞–±–ª–æ–Ω –ø—Ä–æ–º–ø—Ç–∞")
            else:
                try:
                    with db_manager.get_session() as session:
                        task_repo = db_manager.get_task_repo(session)
                        task = task_repo.create_task(name, prompt_template, input_text)
                        st.success(f"‚úÖ –ó–∞–¥–∞—á–∞ '{task.name}' —Å–æ–∑–¥–∞–Ω–∞ —Å ID: `{task.id}`")
                        st.rerun()
                except Exception as e:
                    st.error(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–¥–∞—á–∏: {e}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä
    st.markdown("---")
    st.markdown("### üí° –ü—Ä–∏–º–µ—Ä")
    st.code("""
–ù–∞–∑–≤–∞–Ω–∏–µ: –¢–µ—Å—Ç –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
–®–∞–±–ª–æ–Ω: –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π —Ç–µ–∫—Å—Ç –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å: {question}
–í—Ö–æ–¥–Ω–æ–π —Ç–µ–∫—Å—Ç: –¢–µ–∫—Å—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {text}
""", language="text")