"""
LLM Runner - MVP –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π
"""
import streamlit as st
import os
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="LLM Runner",
    page_icon="ü§ñ",
    layout="wide",
    initial_sidebar_state="expanded"
)

def main():
    st.title("ü§ñ LLM Runner")
    st.markdown("**MVP –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π**")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    if not os.getenv("COMET_API_KEY"):
        st.error("‚ö†Ô∏è COMET_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env —Ñ–∞–π–ª–µ")
        st.info("–°–æ–∑–¥–∞–π—Ç–µ .env —Ñ–∞–π–ª –Ω–∞ –æ—Å–Ω–æ–≤–µ .env.example –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤–∞—à API –∫–ª—é—á")
        return
    
    # –ù–∞–≤–∏–≥–∞—Ü–∏—è –ø–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º
    pages = {
        "üìä Dataset": "llm_runner.ui.pages.dataset",
        "üöÄ Runs": "llm_runner.ui.pages.runs", 
        "‚≠ê Evaluate": "llm_runner.ui.pages.evaluate",
        "üìã History": "llm_runner.ui.pages.history",
        "‚öôÔ∏è Settings": "llm_runner.ui.pages.settings"
    }
    
    selected_page = st.sidebar.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü—É:", list(pages.keys()))
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –∑–∞–ø—É—Å–∫–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
    try:
        module_name = pages[selected_page]
        module = __import__(module_name, fromlist=['main'])
        module.main()
    except ImportError as e:
        st.error(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        st.info("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –µ—â–µ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–∞")

if __name__ == "__main__":
    main()